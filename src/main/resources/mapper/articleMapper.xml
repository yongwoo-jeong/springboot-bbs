<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ebrainstudy__springbootbbs.article.ArticleMapperInterface">
  <!-- 검색조건 재활용을 위한 sql 프라그먼트 -->
  <sql id="searchCondition">
    <trim prefix="where (" suffix=")" prefixOverrides="AND">
      <if test="conditionMap != null and conditionMap.keyword != null and !conditionMap.keyword.equals('')" >
        AND title like '%${conditionMap.keyword}%'
      </if>
      <if test="conditionMap != null and conditionMap.categoryId != null and conditionMap.categoryId != 0">
        AND category_id = '${conditionMap.categoryId}'
      </if>
      <if test="conditionMap != null and conditionMap.startDate != null and !conditionMap.startDate.equals('')" >
        AND created_at &gt;= #{conditionMap.startDate}
        OR modified_at &gt;= #{conditionMap.startDate}
      </if>
      <if test="conditionMap != null and conditionMap.endDate != null and !conditionMap.endDate.equals('')" >
        AND created_at &lt;= #{conditionMap.endDate}
        OR modified_at &lt;= #{conditionMap.endDate}
      </if>
    </trim>
  </sql>
  <select id="selectSearchArticles" resultType="com.example.ebrainstudy__springbootbbs.article.ArticleVO">
    SELECT *
    FROM   article
    <include refid="searchCondition">
        <property name="conditionMap" value="conditionMap"/>
      </include>
    ORDER BY article_id DESC
    LIMIT ${limitStartOffset}, 10
  </select>
  <select id="selectCountArticles" resultType="int" >
    SELECT COUNT(*) FROM article
    <include refid="searchCondition">
      <property name="conditionMap" value="conditionMap"/>
    </include>
  </select>
  <select id="selectArticle" resultType="com.example.ebrainstudy__springbootbbs.article.ArticleVO">
    SELECT *
    FROM   article
    WHERE  article_id = #{articleId}
  </select>
  <update id="updateViewCount">
    UPDATE article
    SET view = view+1
    WHERE  article_id = #{articleId}
  </update>
  <insert id="insertArticle">
    INSERT INTO article
                (
                        title,
                        writer,
                        password,
                        content,
                        created_at,
                        category_id
                )
           VALUES
                (
                        "${newArticle.title}",
                        "${newArticle.writer}",
                        ${newArticle.password},
                        #{newArticle.content},
                        NOW(),
                        ${newArticle.categoryId}
                )
    <selectKey keyProperty="newArticle.articleId" resultType="int" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <delete id="deleteArticle">
    DELETE FROM article
    WHERE article_id=#{articleId}
  </delete>
</mapper>